Konzeption:
Überlegungen wie wir den Graph speichern können:
Was muss gespeichert werden?
	1: Ecken
	2: Kanten (Verbindung zwischen zwei Ecken)
		1: Attribute an Kanten
Daraus ergibt sich jeweils eine Klasse für Node und Edge

Der AIGraph muss eine Liste von Ecken speichern können

Soll eine Ecke auch speichern, welche Kanten auf ihn zeigen oder wird das im Graph gespeichert, welche Kanten es gibt?
Nach einiger überlegung haben wir uns entschieden, dass ein Graph die Kanten speichert, weil dann das Löschen der Kanten einfacher ist.
Sollte sich später herausstellen, dass es sinnvoll ist, dass eine Ecke seine Vorgänger und Nachfolger kennt, müssen wir uns noch was überlegen.


Kanten haben eine Start- und eine Ziel Ecke. Außerdem können an ihr noch Attribute gespeichert werden.
Da eine Kante mehr als ein Attribut speichern können muss, muss eine Kante über eine Map verfügen.

Überlegungen gerichtete & ungerichtete Kanten.
Speichert ein Graph zwei Listen von Kanten?
Gerichtet und ungerichtet oder nur eine Liste und eine Kante weiß, ob Sie gerichtet oder ungerichtet ist.
Muss eine Kante wissen, ob Sie gerichtet oder ungerichtet ist?
Gibt es zwei Klassen, UndirectedEdge und DirectedEdge die von Edge erben?